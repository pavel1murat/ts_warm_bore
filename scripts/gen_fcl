#!/bin/bash 

        project=$1 # ts_warm_bore # $1 # ts_inner_bore
           dsid=$2 # 711_0001
    input_stage=$3 # s1 ... or gen
   input_stream=$4 # if gen, "250_20000' means 'njobs_neventsPerJob'
   output_stage=$5 # s1, s2, or s3 ...
        jobtype=$6 # 'stn' or 'sim' , for example
           doit=$7

prefix='echo ' ; if [ ".$doit" != "." ] ; then prefix='' ; fi

setup mu2etools
setup mu2efiletools
setup mu2egrid       v6_01_00

dsconf=${dsid}_${input_stage}_${input_stream}_${jobtype}
inputs=""
njobs=xxxx
nevents_per_job=xxxxx

if [ -d 000 ] ; then 
    tmp_stub=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1`
    echo directory 000 already exists, move it to 000.$tmp_stub
    mv 000 000.$tmp_stub
fi

template_fcl="undefined"
       merge=0

if [ $input_stage == "s3" ] ; then

    inputs=$CATALOG_DIR/$project/$dsid/$input_stage/$project.${dsid}_${input_stage}.$input_stream.art

    if [ $jobtype == "stn" ] ; then
	merge=1000
	if   [ $input_stream == "tgtstops"  ] ; then template_fcl=Stntuple/test/g4s3_tgtstops_stn.fcl
	elif [ $input_stream == "ootstops"  ] ; then template_fcl=Stntuple/test/g4s3_ootstops_stn.fcl
	elif [ $input_stream == "beam"      ] ; then template_fcl=Stntuple/test/g4s3_mothers_stn.fcl
	elif [ $input_stream == "crv"       ] ; then template_fcl=Stntuple/test/g4s3_crv_stn.fcl
	elif [ $input_stream == "truncated" ] ; then template_fcl=Stntuple/test/g4s3_truncated_stn.fcl
	else                                         echo WRONG INPUT STREAM: s3 $input_stream
	fi
    else
	echo ERROR: UNKNOWN job type: $jobtype for s2 $input_stream
    fi
elif [ $input_stage == "s2" ] ; then

    inputs=$CATALOG_DIR/$project/$dsid/$input_stage/$project.${dsid}_${input_stage}.$input_stream.art
    echo S2: inputs:$inputs

    if [ $jobtype == "sim" ] ; then
	merge=2
	if [ $input_stream == "mubeam" ] ; then template_fcl=ts_warm_bore/$dsid/DS_$dsid.fcl
	else                                    echo UNKNOWN INPUT STREAM: s2 $input_stream
	fi
    elif [ $jobtype == "stn" ] ; then
	merge=1000
	if [ $input_stream == "mubeam" ] ; then template_fcl=Stntuple/test/g4s2_mubeam_stn.fcl
	else                                    echo WRONG INPUT STREAM: s3 $input_stream
	fi
    else
	echo ERROR: UNKNOWN job type: $jobtype for input_stage=$input_stage and input_stream=$input_stream
    fi
elif [ $input_stage == "s1" ] ; then # stntupling s1 stage or s2

    inputs=$CATALOG_DIR/$project/$dsid/$input_stage/$project.${dsid}_${input_stage}.$input_stream.art
    
    if [ $jobtype == "stn" ] ; then
	template_fcl=Stntuple/test/g4s1_${input_stream}_stn.fcl
	merge=1000
    elif [ $jobtype == "sim" ] ; then
	template_fcl=${project}/$dsid/TS_$dsid.fcl
	merge=25
    else
	echo ERROR: UNKNOWN job type: $jobtype for input_stage=$input_stage
    fi
else
    if [ $input_stage == "gen" ] ; then # s1 stage
	if [ $jobtype == "sim" ] ; then
	       template_fcl=ts_warm_bore/$dsid/PS_$dsid.fcl
	              njobs=`echo $input_stream | awk -F _ '{print $1}'`
	    nevents_per_job=`echo $input_stream | awk -F _ '{print $2}'`
	elif [ $jobtype == "stn" ] ; then
		template_fcl=Stntuple/test/g4s1_${input_stream}_stn.fcl
	else
	    echo ERROR: UNKNOWN job type: $jobtype for input_stage=$input_stage
	fi
    else
	echo input_stage = $input_stage, DONT KNOW WHAT DO TO
    fi
fi

if [ $template_fcl == "undefined" ] ; then exit -1 ; fi
#------------------------------------------------------------------------------
# now generate fcl, creates '000' subdirectory
#------------------------------------------------------------------------------
cmd="generate_fcl --description=$project --dsconf=$dsconf --embed $template_fcl"

echo cmd=$cmd

if [ ".$inputs" != "." ] ; then
    cmd=$cmd" --merge=$merge  --inputs=$inputs"
else
    cmd=$cmd" --events=$nevents_per_job --njobs=$njobs  --run=1"
fi

$prefix$cmd

${prefix}mv seeds.$USER.$project.${dsconf}.*.txt 000/.
#------------------------------------------------------------------------------
# make sure we're nor overwriting the existing directory
#------------------------------------------------------------------------------
dir=$project/tmp_fcl/$dsid.${input_stage}_$input_stream.$jobtype

if [ -d $dir ] ; then 
    echo ERROR: directory $dir already exists !
else
    ${prefix}mv 000 $dir
    cd $dir
#------------------------------------------------------------------------------
# need to replace: 'MU2EGRIDDSOWNER' --> "$USER"
#                  'MU2EGRIDDSCONF'  --> ${dsid}_${input_stage}_${input_stream}_${jobtype}
#------------------------------------------------------------------------------
    dsconf=${dsid}_${input_stage}_${input_stream}_${jobtype}
    for f in `ls *.fcl` ; do 
	f1=$f.tmp
	cat $f | sed "s/xxx_xxxx/$project/" | sed "s/MU2EGRIDDSOWNER/$USER/" | sed "s/MU2EGRIDDSCONF/$dsconf/">| $f1
	mv $f1 $f
    done

    tarfile=../${project}.$dsid.${input_stage}_${input_stream}.${jobtype}.fcl.tbz
    tar -cjf $tarfile *.fcl
#------------------------------------------------------------------------------
# move fcl files for the simulation jobs to PNFS
#------------------------------------------------------------------------------
    if [ $jobtype == "sim" ] ; then
	cp $tarfile /pnfs/mu2e/resilient/users/murat/.
    fi
fi
